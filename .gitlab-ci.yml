image: docker:stable


variables:
  IMAGE_SHA: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  DOCKER_TLS_CERTDIR: "/certs"


services:
  - docker:stable-dind


before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

    
stages:
  - build
  - deploy
  - smoke-test

build-sha:
  stage: build
  script:
    - echo 'let appVersion = "'${CI_COMMIT_TAG:-$CI_COMMIT_SHA}'"' > ./Sources/App/Core/AppVersion.swift
    - docker build -t $IMAGE_SHA .
    - docker push $IMAGE_SHA
    
build-tag:
  stage: build
  only:
    - tags
  script:
    # re-tag image with tag name
    - docker pull $IMAGE_SHA
    - docker tag $IMAGE_SHA $IMAGE_TAG
    - docker push $IMAGE_TAG

.deploy-common: &deploy-common
  stage: deploy
  image: docker/compose:1.25.5
  tags:
    - spi
    - docker
  script: |
    VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
    apk add --no-cache curl
    env VERSION=$VERSION docker-compose up -d
    if [[ $? == 0 ]]; then
      curl -H "X-Rollbar-Access-Token: $ROLLBAR_TOKEN" -X POST --data '{"environment": "'"$ENV"'", "local_username": "CI", "revision": "'"$VERSION"'", "status": "succeeded"}' https://api.rollbar.com/api/1/deploy
    else
      curl -H "X-Rollbar-Access-Token: $ROLLBAR_TOKEN" -X POST --data '{"environment": "'"$ENV"'", "local_username": "CI", "revision": "'"$VERSION"'", "status": "failed"}' https://api.rollbar.com/api/1/deploy
    fi
  
  
deploy:
  <<: *deploy-common
  only:
    - tags
  
  
deploy (ad hoc): &deploy
  <<: *deploy-common
  when: manual

smoke-test:
  # stage: smoke-test
  stage: build
  when: manual
  script:
    - docker run --rm -t -e base_url="$SITE_URL" -v $PWD:/host -w /host finestructure/rester:0.7.2 restfiles/smoke-test.restfile
