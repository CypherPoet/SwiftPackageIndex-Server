/* Copyright 2020-2021 Dave Verwer, Sven A. Schmidt, and other contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* -------------------------------------------------------------------------
  Compatibility matrix styles - This is used for both the compatibility
  matrices on the package page, and for the full build compatibility report.
---------------------------------------------------------------------------- */

.matrices {
  display: grid;
  gap: 20px;
}

.matrix {
  margin: 0;
  padding: 0;

  li {
    margin: 5px 0;
  }

  @media screen and (max-width: $mobile-breakpoint) {
    li {
      margin: 30px 0;
    }
  }

  .row {
    display: flex;
    flex-direction: row;

    &:first-child .row_values > div:first-child {
      display: flex;
    }

    .row_label {
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      flex-basis: 0;
      flex-grow: 3;

      > div {
        display: flex;
        flex-direction: column;
        justify-content: center;
        height: 35px;
      }
    }

    @media screen and (max-width: $mobile-breakpoint) {
      .row_label {
        /* This fixes a nasty bug in Safari 13.1 where inheriting flex-basis:0 causes the height of the entire row to collapse to zero */
        flex-basis: auto;
      }
    }

    .row_values {
      display: flex;
      flex-direction: column;
      flex-basis: 0;
      flex-grow: 7;

      > div {
        display: flex;
        flex-direction: row;
      }

      > div:first-child {
        display: none;
      }

      @media screen and (max-width: $mobile-breakpoint) {
        > div:first-child {
          display: flex;
        }
      }
    }

    @media screen and (max-width: $mobile-breakpoint) {
      .row_values {
        /* This fixes a nasty bug in Safari 13.1 where inheriting flex-basis:0 causes the height of the entire row to collapse to zero */
        flex-basis: auto;
      }
    }
  }

  @media screen and (max-width: $mobile-breakpoint) {
    .row {
      flex-direction: column;
    }
  }

  .column_label > div {
    padding: 5px 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    flex-basis: 0;
    flex-grow: 1;
    font-size: 14px;
    font-weight: 600;

    small {
      font-weight: normal;
    }
  }

  .result > div {
    margin: 0 3px;
    height: 35px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-basis: 0;
    flex-grow: 1;
  }

  &.compatibility {
    .result {
      & > div {
        background-size: 20px;
        background-repeat: no-repeat;
        background-position: center center;
      }

      & > .compatible {
        background-image: var(--image-compatible);
        background-color: var(--matrix-result-compatible-background);
      }

      & > .pending,
      & > .unknown {
        background-size: 12px;
        background-image: var(--image-unknown);
        background-color: var(--matrix-result-unknown-background);
      }

      & > .incompatible {
        background-image: var(--image-incompatible);
        background-color: var(--matrix-result-incompatible-background);
      }
    }
  }

  &.builds {
    .column_label > div > span {
      font-size: 16px;
      background-position: top 4px right;
    }

    .result > div {
      &.succeeded > a,
      &.failed > a {
        padding-left: 25px;
        background-size: 18px;
        background-position: left center;
        background-repeat: no-repeat;
      }

      &.succeeded {
        background-color: var(--matrix-result-succeeded-background);

        a {
          background-image: var(--image-succeeded);
        }
      }

      &.failed {
        background-color: var(--matrix-result-failed-background);

        a {
          background-image: var(--image-failed);
        }
      }

      &.pending,
      &.unknown {
        background-color: var(--matrix-result-unknown-background);
      }
    }
  }
}
