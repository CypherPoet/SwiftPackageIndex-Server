version: '3.7'

# logging & monitoring visualiser

services:

  grafana:
    image: grafana/grafana:7.3.1
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_SERVER_ROOT_URL: "${GF_SERVER_ROOT_URL}"
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - app_backend
    deploy:
      placement:
        constraints:
          # placement for data persistence
          - node.labels.grafana_node == true


  # logging

  loki:
    image: grafana/loki:2.0.0
    command: -config.file=/loki.yml
    configs:
      - source: loki_cfg
        target: /loki.yml
    networks:
      - app_backend


  promtail:
    image: grafana/promtail:2.0.0
    command: -config.file=/promtail.yml
    configs:
      - source: promtail_cfg
        target: /promtail.yml
    volumes:
      - /var/lib/docker/containers:/var/log
    networks:
      - app_backend
    deploy:
      mode: global


  # monitoring

  prometheus:
    image: prom/prometheus:v2.22.1
    volumes:
      - prometheus_data:/prometheus
    command: --config.file=/prometheus.yml
    configs:
      - source: prometheus_cfg
        target: /prometheus.yml
    networks:
      - app_backend
    deploy:
      placement:
        constraints:
          # placement for data persistence
          - node.labels.prometheus_node == true


  pushgateway:
    image: prom/pushgateway:v1.3.0
    networks:
      - app_backend


  node-exporter:
    image: basi/node-exporter:v1.15.0
    networks:
      - app_backend
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/host_hostname
    environment:
      HOST_HOSTNAME: /etc/host_hostname
    command: --path.procfs /host/proc --path.sysfs /host/sys --collector.textfile.directory /etc/node-exporter/ --collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($$|/)"
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 32M
        reservations:
          cpus: '0.10'
          memory: 16M


  cadvisor:
    image: google/cadvisor:v0.37.5
    networks:
      - backend
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    environment:
      LOGSPOUT: ignore
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.20'
          memory: 128M
        reservations:
          cpus: '0.10'
          memory: 64M


configs:
  loki_cfg:
    file: ./infrastructure/loki.yml
  promtail_cfg:
    file: ./infrastructure/promtail.yml
  prometheus_cfg:
    file: ./infrastructure/prometheus.yml


volumes:
  grafana_data:
  prometheus_data:


networks:
  app_backend:
    external: true
